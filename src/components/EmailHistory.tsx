"use client"

import * as React from "react"
import { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from "@/components/ui/dialog"
import { Button } from "@/components/ui/button"
import { Mail, Calendar, Clock, Eye, Trash2 } from "lucide-react"
import { format } from "date-fns"
import { ru } from "date-fns/locale"

interface EmailHistoryProps {
  open: boolean
  onOpenChange: (open: boolean) => void
}

interface SentEmail {
  to_email: string
  to_name: string
  subject: string
  message: string
  postcard_url: string
  event_name: string
  event_date?: string
  timestamp: string
  status: 'demo' | 'sent'
  emailjs_result?: any
}

export function EmailHistory({ open, onOpenChange }: EmailHistoryProps) {
  const [sentEmails, setSentEmails] = React.useState<SentEmail[]>([])
  const [selectedEmail, setSelectedEmail] = React.useState<SentEmail | null>(null)

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é –æ—Ç–ø—Ä–∞–≤–æ–∫
  React.useEffect(() => {
    if (open) {
      const emails = JSON.parse(localStorage.getItem('sentEmails') || '[]')
      setSentEmails(emails.reverse()) // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–µ —Å–Ω–∞—á–∞–ª–∞
    }
  }, [open])

  // –û—á–∏—Å—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏
  const clearHistory = () => {
    localStorage.removeItem('sentEmails')
    setSentEmails([])
  }

  // –ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π email
  const viewEmail = (email: SentEmail) => {
    setSelectedEmail(email)
  }

  if (selectedEmail) {
    return (
      <Dialog open={open} onOpenChange={onOpenChange}>
        <DialogContent className="sm:max-w-[600px]">
          <DialogHeader>
            <DialogTitle className="flex items-center gap-2">
              <Mail className="h-5 w-5" />
              –î–µ—Ç–∞–ª–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏
            </DialogTitle>
            <DialogDescription>
              –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–π –æ—Ç–∫—Ä—ã—Ç–∫–µ
            </DialogDescription>
          </DialogHeader>

          <div className="space-y-4">
            {/* –°—Ç–∞—Ç—É—Å */}
            <div className="flex items-center gap-2">
              <div className={`w-3 h-3 rounded-full ${selectedEmail.status === 'sent' ? 'bg-green-500' : 'bg-blue-500'}`}></div>
              <span className="text-sm font-medium">
                {selectedEmail.status === 'sent' ? '‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : 'üé≠ –î–µ–º–æ-—Ä–µ–∂–∏–º'}
              </span>
              <span className="text-xs text-muted-foreground ml-auto">
                {format(new Date(selectedEmail.timestamp), "d MMMM yyyy, HH:mm", { locale: ru })}
              </span>
            </div>

            {/* –ü–æ–ª—É—á–∞—Ç–µ–ª—å */}
            <div className="bg-muted/50 rounded-lg p-3">
              <h4 className="text-sm font-medium mb-2">–ü–æ–ª—É—á–∞—Ç–µ–ª—å:</h4>
              <p className="text-sm"><strong>{selectedEmail.to_name}</strong></p>
              <p className="text-xs text-muted-foreground">{selectedEmail.to_email}</p>
            </div>

            {/* –°–æ–±—ã—Ç–∏–µ */}
            <div className="bg-muted/50 rounded-lg p-3">
              <h4 className="text-sm font-medium mb-2">–°–æ–±—ã—Ç–∏–µ:</h4>
              <p className="text-sm font-medium">{selectedEmail.event_name}</p>
              {selectedEmail.event_date && (
                <p className="text-xs text-muted-foreground">{selectedEmail.event_date}</p>
              )}
            </div>

            {/* –û—Ç–∫—Ä—ã—Ç–∫–∞ */}
            <div className="bg-muted/50 rounded-lg p-3">
              <h4 className="text-sm font-medium mb-2">–û—Ç–∫—Ä—ã—Ç–∫–∞:</h4>
              <div className="aspect-[3/4] max-w-[200px] mx-auto overflow-hidden rounded-lg border">
                <img
                  src={selectedEmail.postcard_url}
                  alt={`–û—Ç–∫—Ä—ã—Ç–∫–∞ –¥–ª—è ${selectedEmail.event_name}`}
                  className="h-full w-full object-cover"
                />
              </div>
            </div>

            {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
            <div className="bg-muted/50 rounded-lg p-3">
              <h4 className="text-sm font-medium mb-2">–¢–µ–∫—Å—Ç –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è:</h4>
              <div className="text-xs text-muted-foreground whitespace-pre-line max-h-32 overflow-y-auto">
                {selectedEmail.message}
              </div>
            </div>
          </div>

          <div className="flex justify-between pt-4">
            <Button variant="outline" onClick={() => setSelectedEmail(null)}>
              ‚Üê –ù–∞–∑–∞–¥ –∫ —Å–ø–∏—Å–∫—É
            </Button>
            <Button variant="outline" onClick={() => onOpenChange(false)}>
              –ó–∞–∫—Ä—ã—Ç—å
            </Button>
          </div>
        </DialogContent>
      </Dialog>
    )
  }

  return (
    <Dialog open={open} onOpenChange={onOpenChange}>
      <DialogContent className="sm:max-w-[700px]">
        <DialogHeader>
          <DialogTitle className="flex items-center gap-2">
            <Clock className="h-5 w-5" />
            –ò—Å—Ç–æ—Ä–∏—è –æ—Ç–ø—Ä–∞–≤–æ–∫
          </DialogTitle>
          <DialogDescription>
            –í—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ –æ—Ç–∫—Ä—ã—Ç–∫–∏ –∏ –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
          </DialogDescription>
        </DialogHeader>

        <div className="space-y-4">
          {sentEmails.length === 0 ? (
            <div className="text-center py-8">
              <Mail className="h-12 w-12 text-muted-foreground mx-auto mb-4" />
              <p className="text-muted-foreground">–ü–æ–∫–∞ –Ω–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –æ—Ç–∫—Ä—ã—Ç–æ–∫</p>
              <p className="text-xs text-muted-foreground mt-2">
                –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –æ—Ç–∫—Ä—ã—Ç–∫—É, –∏ –æ–Ω–∞ –ø–æ—è–≤–∏—Ç—Å—è –∑–¥–µ—Å—å
              </p>
            </div>
          ) : (
            <>
              <div className="flex justify-between items-center">
                <p className="text-sm text-muted-foreground">
                  –í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–æ–∫: {sentEmails.length}
                </p>
                <Button variant="outline" size="sm" onClick={clearHistory}>
                  <Trash2 className="h-4 w-4 mr-2" />
                  –û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é
                </Button>
              </div>

              <div className="max-h-96 overflow-y-auto space-y-2">
                {sentEmails.map((email, index) => (
                  <div
                    key={index}
                    className="flex items-center gap-3 p-3 border rounded-lg hover:bg-muted/50 transition-colors"
                  >
                    <div className={`w-3 h-3 rounded-full flex-shrink-0 ${email.status === 'sent' ? 'bg-green-500' : 'bg-blue-500'}`}></div>
                    
                    <div className="flex-1 min-w-0">
                      <p className="text-sm font-medium truncate">{email.event_name}</p>
                      <p className="text-xs text-muted-foreground truncate">
                        –î–ª—è: {email.to_name} ({email.to_email})
                      </p>
                      <p className="text-xs text-muted-foreground">
                        {format(new Date(email.timestamp), "d MMM yyyy, HH:mm", { locale: ru })}
                      </p>
                    </div>

                    <div className="flex items-center gap-2">
                      <span className={`text-xs px-2 py-1 rounded-full ${
                        email.status === 'sent' 
                          ? 'bg-green-100 text-green-800' 
                          : 'bg-blue-100 text-blue-800'
                      }`}>
                        {email.status === 'sent' ? '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ' : '–î–µ–º–æ'}
                      </span>
                      
                      <Button
                        variant="ghost"
                        size="sm"
                        onClick={() => viewEmail(email)}
                      >
                        <Eye className="h-4 w-4" />
                      </Button>
                    </div>
                  </div>
                ))}
              </div>
            </>
          )}
        </div>

        <div className="flex justify-end pt-4">
          <Button variant="outline" onClick={() => onOpenChange(false)}>
            –ó–∞–∫—Ä—ã—Ç—å
          </Button>
        </div>
      </DialogContent>
    </Dialog>
  )
}
